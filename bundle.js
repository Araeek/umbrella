(()=>{"use strict";const e=new Headers({"X-Api-Key":"09tYeXCwhiKsMjQY6ME1Rw==sEbRPFDVhcuP3U1R","Content-Type":"application/json"}),t=document.getElementById("search-result"),n=document.getElementsByClassName("close")[0],c=document.getElementById("search-bar"),o=document.getElementById("result-list");function a(){t.style.display="none"}function s(e="esfahan"){(async function(e){try{const t=await fetch(`https://api.weatherapi.com/v1/forecast.json?q=${e}&key=2d0f4b140e8f4e0fb9664239232005`,{mode:"cors"}),n=await t.json();return console.log(n),n}catch(e){console.log(e.message)}})(e).then((e=>{var t,n,c,o,a,s,d;console.log(e.location.localtime.split(" ")[1].split(":")[0]),console.log(e.forecast.forecastday[0].hour),t=e.location.name,document.querySelector(".city-name").textContent=t,n=e.current.temp_c,document.querySelector(".city-temp").textContent=n+"°",c=e.current.condition.text,document.querySelector(".city-cond").textContent=c,o=e.current.is_day,a=e.current.condition.code,document.querySelector(".weather-icon img").src=`assets/icons/${o?"day":"night"}/${a}.png`,function(e){document.querySelector(".real-feel+.air-info-data").textContent=Math.round(e)+"°"}(e.current.feelslike_c),s=e.current.wind_kph,document.querySelector(".wind+.air-info-data").textContent=`${s} km/h`,function(e){const t=document.querySelector(".chance-of-rain>span"),n=document.querySelector(".rain-chance+.air-info-data");t.textContent=e,n.textContent=`${e} %`}(e.forecast.forecastday[0].hour[e.location.localtime.split(" ")[1].split(":")[0]].chance_of_rain),d=e.current.uv,document.querySelector(".uv+.air-info-data").textContent=d,function(e,t){const n=document.querySelector(".today-forecast-list");n.innerHTML="";for(let c=t+1;c<t+7;c++){24===c&&(c=0);const t=document.createElement("li");t.classList.add("today-forecast-item");const o=document.createElement("h5");o.classList.add("today-forecast-time"),o.textContent=`${c%12==0?"12":c%12}:00 ${1===Math.ceil(c/12)?"AM":"PM"}`;const a=document.createElement("div");a.classList.add("today-weather-icon");const s=document.createElement("img");s.src=`assets/icons/${e[c].is_day?"day":"night"}/${e[c].condition.code}.png`,a.append(s);const d=document.createElement("p");d.classList.add("today-forecast-temp"),d.textContent=Math.round(e[c].temp_c),t.append(o),t.append(a),t.append(d),n.append(t)}}(e.forecast.forecastday[0].hour,e.location.localtime.split(" ")[1].split(":")[0])})),async function(e){try{const t=await fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${e}?unitGroup=metric&include=days&key=U6246QRR7XRLWVKSZLRVU2GXK&contentType=json&iconSet=icons1`,{mode:"cors"}),n=await t.json();return console.log(n),n}catch(e){console.log(e.message)}}(e).then((e=>{!function(e){const t=document.querySelector("#seven-forecast-list");t.innerHTML="";for(let n=0;n<7;n++){const c=document.createElement("li");c.classList.add("seven-forecast-item");const o=document.createElement("span");o.classList.add("seven-forecast-day");const a=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];o.textContent=`${0===n?"Today":a[new Date(e[n].datetime).getDay()]}`;const s=document.createElement("div");s.classList.add("seven-forecast-weather");const d=document.createElement("img"),i={snow:1225,rain:1189,fog:1030,wind:1542,cloudy:1006,"partly-cloudy-day":1003,"partly-cloudy-night":1003,"clear-day":1e3,"clear-night":1e3};d.src=`assets/icons/day/${i[e[n].icon]}.png`;const r=document.createElement("p");r.textContent=e[n].conditions,s.append(d),s.append(r);const l=document.createElement("p");l.classList.add("high-low");const u=document.createElement("span");u.textContent=Math.round(e[n].tempmax),l.append(u),l.append(`/${Math.round(e[n].tempmin)}`),c.append(o),c.append(s),c.append(l),t.append(c)}}(e.days)}))}c.addEventListener("submit",(function(n){n.preventDefault(),async function(t){try{const n=await fetch(`https://api.api-ninjas.com/v1/city?name=${t}&limit=10`,{mode:"cors",method:"GET",headers:e});return await n.json()}catch(e){console.log(e.message)}}(document.getElementById("city-search").value).then((e=>{if(0===e.length){const e=document.createElement("p");e.classList.add("no-result"),e.textContent="No city found! Try again!",o.append(e)}e.forEach((e=>{const t=document.createElement("li"),n=document.createElement("p"),c=document.createElement("button");t.classList.add("city-item"),t.dataset.city=e.name,n.textContent=`${e.name}, ${e.country}`,c.textContent="Set",c.addEventListener("click",(e=>{s(e.target.parentNode.dataset.city),a()})),t.append(n),t.append(c),o.append(t)}))})),o.innerHTML="",t.style.display="block"})),n.addEventListener("click",a),window.addEventListener("click",(function(e){e.target===t&&a()})),s()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,