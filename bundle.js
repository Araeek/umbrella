(()=>{"use strict";new Headers({"X-Api-Key":"09tYeXCwhiKsMjQY6ME1Rw==sEbRPFDVhcuP3U1R","Content-Type":"application/json"}),async function(e){try{const e=await fetch("https://api.weatherapi.com/v1/forecast.json?q=esfahan&key=2d0f4b140e8f4e0fb9664239232005",{mode:"cors"});return await e.json()}catch(e){console.log(e.message)}}().then((e=>{const t=new Date;var n,o,c,a,s,r,d;console.log(t.getDay()),n=e.location.name,document.querySelector(".city-name").textContent=n,o=e.current.temp_c,document.querySelector(".city-temp").textContent=o+"°",c=e.current.condition.text,document.querySelector(".city-cond").textContent=c,a=e.current.is_day,s=e.current.condition.code,document.querySelector(".weather-icon img").src=`assets/icons/${a?"day":"night"}/${s}.png`,function(e){document.querySelector(".real-feel+.air-info-data").textContent=Math.round(e)+"°"}(e.current.feelslike_c),r=e.current.wind_kph,document.querySelector(".wind+.air-info-data").textContent=`${r} km/h`,function(e){const t=document.querySelector(".chance-of-rain>span"),n=document.querySelector(".rain-chance+.air-info-data");t.textContent=e,n.textContent=`${e} %`}(e.forecast.forecastday[0].hour[t.getHours()].chance_of_rain),function(e,t){const n=document.querySelector(".today-forecast-list");for(let o=t+1;o<t+7;o++){24===o&&(o=0);const t=document.createElement("li");t.classList.add("today-forecast-item");const c=document.createElement("h5");c.classList.add("today-forecast-time"),c.textContent=`${o%12==0?"12":o%12}:00 ${1===Math.ceil(o/12)?"AM":"PM"}`;const a=document.createElement("div");a.classList.add("today-weather-icon");const s=document.createElement("img");s.src=`assets/icons/${e[o].is_day?"day":"night"}/${e[o].condition.code}.png`,a.append(s);const r=document.createElement("p");r.classList.add("today-forecast-temp"),r.textContent=Math.round(e[o].temp_c),t.append(c),t.append(a),t.append(r),n.append(t)}}(e.forecast.forecastday[0].hour,t.getHours()),d=e.current.uv,document.querySelector(".uv+.air-info-data").textContent=d})),async function(e){try{const e=await fetch("https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/esfahan?unitGroup=metric&include=days&key=U6246QRR7XRLWVKSZLRVU2GXK&contentType=json&iconSet=icons1",{mode:"cors"});return await e.json()}catch(e){console.log(e.message)}}().then((e=>{!function(e){const t=document.querySelector("#seven-forecast-list");for(let n=0;n<7;n++){const o=document.createElement("li");o.classList.add("seven-forecast-item");const c=document.createElement("span");c.classList.add("seven-forecast-day");const a=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];c.textContent=`${0===n?"Today":a[new Date(e[n].datetime).getDay()]}`;const s=document.createElement("div");s.classList.add("seven-forecast-weather");const r=document.createElement("img"),d={snow:1225,rain:1189,fog:1030,wind:1542,cloudy:1006,"partly-cloudy-day":1003,"partly-cloudy-night":1003,"clear-day":1e3,"clear-night":1e3};r.src=`assets/icons/day/${d[e[n].icon]}.png`;const i=document.createElement("p");i.textContent=e[n].conditions,s.append(r),s.append(i);const u=document.createElement("p");u.classList.add("high-low");const l=document.createElement("span");l.textContent=Math.round(e[n].tempmax),u.append(l),u.append(`/${Math.round(e[n].tempmin)}`),o.append(c),o.append(s),o.append(u),t.append(o)}}(e.days)}));const e=document.getElementById("city-search"),t=document.getElementById("autocomplete-container"),n=["New York","Los Angeles","Chicago","Houston","Miami"];e.addEventListener("input",(()=>{const o=e.value.toLowerCase(),c=n.filter((e=>e.toLowerCase().includes(o)));t.innerHTML="",c.forEach((n=>{const o=document.createElement("div");o.textContent=n,o.addEventListener("click",(()=>{e.value=n,t.style.display="none"})),t.appendChild(o)})),c.length>0?t.style.display="block":t.style.display="none"}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,